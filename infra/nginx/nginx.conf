events {
    worker_connections 1024;
}

http {
    upstream quantum_rpc {
        least_conn;
        server quantum-bootstrap:8545 weight=3 max_fails=3 fail_timeout=30s;
        server quantum-node-1:8545 weight=1 max_fails=3 fail_timeout=30s;
        server quantum-node-2:8545 weight=1 max_fails=3 fail_timeout=30s;
    }
    
    upstream quantum_ws {
        least_conn;
        server quantum-bootstrap:8546 weight=3 max_fails=3 fail_timeout=30s;
        server quantum-node-1:8546 weight=1 max_fails=3 fail_timeout=30s;
        server quantum-node-2:8546 weight=1 max_fails=3 fail_timeout=30s;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=rpc:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ws:10m rate=5r/s;
    
    # Logging
    log_format quantum_access '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent" '
                             'upstream_addr=$upstream_addr '
                             'upstream_status=$upstream_status '
                             'request_time=$request_time '
                             'upstream_response_time=$upstream_response_time';
    
    access_log /var/log/nginx/quantum_access.log quantum_access;
    error_log /var/log/nginx/quantum_error.log warn;
    
    # HTTP RPC endpoint
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # RPC endpoint
        location /rpc {
            limit_req zone=rpc burst=20 nodelay;
            
            proxy_pass http://quantum_rpc/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # WebSocket endpoint
        location /ws {
            limit_req zone=ws burst=10 nodelay;
            
            proxy_pass http://quantum_ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeout settings
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status page for monitoring
        location /status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Default location
        location / {
            return 404 "Quantum Blockchain API - Use /rpc for JSON-RPC or /ws for WebSocket\n";
            add_header Content-Type text/plain;
        }
    }
}